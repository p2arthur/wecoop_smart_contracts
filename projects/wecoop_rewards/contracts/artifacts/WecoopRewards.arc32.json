{
  "hints": {
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "bootstrap(pay,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "initiateRewardCycle(axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createPost(axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "claimed_amount": {
          "type": "uint64",
          "key": "claimed_amount"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "wecoop_token": {
          "type": "uint64",
          "key": "wecoop_token"
        },
        "wecoop_main_address": {
          "type": "bytes",
          "key": "DZ6ZKA6STPVTPCTGN2DO5J5NUYEETWOIB7XVPSJ4F3N2QZQTNS3Q7VIXCM"
        },
        "reward_cycle": {
          "type": "uint64",
          "key": "reward_cycle"
        },
        "total_rewards": {
          "type": "uint64",
          "key": "total_rewards"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 3
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 1
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "WecoopRewards",
    "desc": "",
    "methods": [
      {
        "name": "optInToApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bootstrap",
        "args": [
          {
            "name": "mbrTxn",
            "type": "pay"
          },
          {
            "name": "asset",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "initiateRewardCycle",
        "args": [
          {
            "name": "axfer",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createPost",
        "args": [
          {
            "name": "axfer",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}